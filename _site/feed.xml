<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Deck</title>
    <description>The Deck is a repository of my thoughts, rants and musings.&lt;br&gt; I am The Deck.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 27 Oct 2016 10:34:42 +0200</pubDate>
    <lastBuildDate>Thu, 27 Oct 2016 10:34:42 +0200</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Microsoft Surface Studio, the new Mac Pro ?</title>
        <description>&lt;p&gt;Interresting concept from Microsoft, the new &lt;a href=&quot;https://www.microsoft.com/en-us/surface/devices/surface-studio/tech-specs&quot;&gt;Surface Studio&lt;/a&gt;.
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/assets/images/201610/Surface_Studio.jpg&quot; alt=&quot;Surface Studio&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s squarely aimed at creative professionals, a demographic that has always been the bread and butter of Apple pro hardware.&lt;/p&gt;

&lt;p&gt;Seems a little light specswise compared to a Mac Pro (I mean, compared to what could be a Mac Pro today if it had been updated less than three years ago).&lt;/p&gt;

&lt;p&gt;I hope it will succeed to shame Apple into caring more about its pro line.&lt;/p&gt;

&lt;p&gt;However, it is clearly not for me. For one, I couldn’t draw anything to save my life so I wouldn’t use it for that purpose. But it seems to be a really clever use of touch for a desktop computer.&lt;/p&gt;

&lt;p&gt;The big drawback: the smudges it will create on the screen. I’m already mad at the rare finger traces on my non-touch iMac screen, it would &lt;em&gt;positively&lt;/em&gt; drive me crazy !&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Oct 2016 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2016/10/27/surface-studio-new-mac-pro.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/10/27/surface-studio-new-mac-pro.html</guid>
        
        <category>apple</category>
        
        <category>microsoft</category>
        
        
      </item>
    
      <item>
        <title>Librairie version 2.8</title>
        <description>&lt;p&gt;Big update for my ebooks reading app, &lt;a href=&quot;http://librairie.cubesoft.fr&quot;&gt;Librairie&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
Highlights features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dark mode for the UI&lt;/li&gt;
  &lt;li&gt;Import your ebooks from other apps throught an action extension available in the iOS share sheet&lt;/li&gt;
  &lt;li&gt;Read aloud your ebooks with speech-to-text&lt;/li&gt;
  &lt;li&gt;San Francisco font available in the reader&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Plus of course a lot of small fixes and tweaks.&lt;/p&gt;

&lt;p&gt;Grab it while it’s hot !&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/librairie-ebook-cloud-reader/id742022507?l=fr&amp;amp;ls=1&amp;amp;mt=8&quot;&gt;Librairie on the App Store&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Oct 2016 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2016/10/22/librairie-version-28.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/10/22/librairie-version-28.html</guid>
        
        <category>projects</category>
        
        
      </item>
    
      <item>
        <title>iTunes needs a lot of love</title>
        <description>&lt;p&gt;I mean, literaly … Look at this screenshot:&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/assets/images/201610/itunes-screenshot-1.png&quot; alt=&quot;lots of love...&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’m an Apple Music user. And as such, I’m interrested in saying to iTunes that I &lt;em&gt;“like”&lt;/em&gt; a song to get better recommandations in the future.&lt;/p&gt;

&lt;p&gt;In the latest Sierra iTunes, I got used to click on the “…” icon because the heart that was present in El Capitan had disappeard. Or had it ?&lt;/p&gt;

&lt;p&gt;As you can see in the screenshot above there’s in fact still a tiny ♡ that you can click to like a song. Except that it is white on white and that you can’t see it unless you click on it by accident.&lt;/p&gt;

&lt;p&gt;But what is &lt;em&gt;really&lt;/em&gt; weird is that clicking this ♡ does not actually select the &lt;em&gt;“like”&lt;/em&gt; option in the menu for a song. So you can at the same time &lt;em&gt;“like”&lt;/em&gt; and ♡ a song and they’re not the same thing apparently.&lt;/p&gt;

&lt;p&gt;Ok, who I am to say that you can only love a song in a single way ? But what this star means ?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/201610/itunes-screenshot-2.png&quot; alt=&quot;we&#39;re all made of stars&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Seriously Apple, when you are done fixing Siri, please take a look at the iTunes ratings system. It could use some love …&lt;/p&gt;
</description>
        <pubDate>Wed, 19 Oct 2016 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2016/10/19/itunes-needs-a-lot-of-love.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/10/19/itunes-needs-a-lot-of-love.html</guid>
        
        <category>apple</category>
        
        
      </item>
    
      <item>
        <title>Siri ? Are you there ?</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://512pixels.net/2016/10/the-inward-looking-siri/&quot;&gt;Stephen Hackett on 512pixels.net&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;On this week’s episode of Ctrl-Walt-Delete, Walt Mossberg and Nilay Patel spoke about Siri and how Apple views the service and what it can do.&lt;/p&gt;

  &lt;p&gt;You should go listen to the episode, but in it, Mossberg shares that Apple is focused on improving the parts of Siri that people use most, like making phone calls and setting timers. This comes at the expense of expanding Siri’s knowledge about other things, including common, everyday questions […]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If Siri continues to get better at placing phone calls, but not at searching basic information, people will just stop trying to use it for anything but placing phone calls. Siri, its uses, and where Apple improves it will just be one infinite loop of development instead of seeing substantial expansion.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’m not sure I agree with Stephen on this one. Searching for information with Siri and getting accurate and reliable results sure would be nice. But I’m afraid that a lot of people won’t even think to try until Siri is bulletproof at controling their own phone.&lt;/p&gt;

&lt;p&gt;Why bother to ask complex questions to Siri if you can’t even set a reminder reliably with it ? I sure don’t. Why can I write a text with Siri on my watch but not send it ? How can an assistant be useful if you have to do half its work yourself ?&lt;/p&gt;

&lt;p&gt;That’s why I think Apple is smart to first improve Siri for device manipulation before extending it to further domains.&lt;/p&gt;

&lt;p&gt;Which brings us to an uncomfortable discussion about Siri extensions: &lt;em&gt;SiriKit&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I think that the intent (no pun intended) behind SiriKit is good: nail a few domains to make Siri bulletproof about them before extending to other domains.&lt;/p&gt;

&lt;p&gt;Unfortunatly, seeing the past speed of Siri’s evolution I think it’s highly unlikely that Apple will be able to iterate fast enough on those domains to keep up with the growth of other digital assitants (Alexa, Google assistant …). And their strategy mostly precludes external developers to help with empowering Siri.&lt;/p&gt;

&lt;p&gt;I’m affraid that Siri will soon be stuck between a rock and a hard place.&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Oct 2016 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2016/10/16/Siri-what.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/10/16/Siri-what.html</guid>
        
        <category>apple</category>
        
        
      </item>
    
      <item>
        <title>NSTimer as a chronometer</title>
        <description>&lt;p&gt;NB: This post is mainly a reminder for myself.
How to create a chronometer in Objective C ? I’m glad you asked:&lt;/p&gt;

&lt;p&gt;First, create your NSTimer&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NSTimer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chronometer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSTimer&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scheduledTimerWithTimeInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addToChronometer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;userInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;repeats&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;YES&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And store the current time in an instance variable&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NSDate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSDate&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The timer will call a function aproximatively every second (&lt;em&gt;the chronometer will not provide an exact measure of time. It will be used to show time passing in the format 00:00:00&lt;/em&gt;).&lt;/p&gt;

&lt;div class=&quot;language-objc highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addToChronometer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;	
    &lt;span class=&quot;n&quot;&gt;NSTimeInterval&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;startTime&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;timeIntervalSinceNow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;NSInteger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ti&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSInteger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NSInteger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ti&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NSInteger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ti&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NSInteger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hours&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ti&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chronoLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stringWithFormat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&quot;%02ld:%02ld:%02ld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hours&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minutes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Et voilà !&lt;/p&gt;

</description>
        <pubDate>Thu, 13 Oct 2016 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2016/10/13/nstimer-as-a-chronometer.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/10/13/nstimer-as-a-chronometer.html</guid>
        
        <category>coding</category>
        
        
      </item>
    
      <item>
        <title>Spoken Editions debut</title>
        <description>&lt;p&gt;Spoken Editions are articles in audio form accessible through iTunes.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;a href=&quot;http://appleinsider.com/articles/16/10/03/spoken-editions-section-makes-official-debut-on-apples-itunes&quot;&gt;Appleinsider&lt;/a&gt; :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The section currently includes articles from over 40 sources, such as Reuters, Wired, IGN, Jezebel, Playboy, and the Huffington Post. People can also access the material from Apple’s dedicated Podcasts app.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Audio only version of Playboy articles. Looks like a winner to me.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Oct 2016 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2016/10/05/spoken-edition-debut.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/10/05/spoken-edition-debut.html</guid>
        
        <category>fun</category>
        
        
      </item>
    
      <item>
        <title>Constant freezes with macOS Sierra</title>
        <description>&lt;p&gt;Since upgrading to Sierra last week, my 5K iMac late 2015 has been quite flaky. More precisely, it has experienced regular freezes that required hard reboots of the machine. When I say regular, I mean 5 or 6 times a day.&lt;/p&gt;

&lt;p&gt;During those freezes, the mouse and keyboard would become unresponsive and the screen saver would never kick in. At the same time, the audio would continue to play and the icons in the menu bar would still be updated.&lt;/p&gt;

&lt;p&gt;After trolling the internet and Apple forums for a while, I think I found the culprit: Logitech Control Center.&lt;/p&gt;

&lt;p&gt;This is a small utility that let’s you fine tune your Logitech mouse and keyboard but requires a kernel extension for doing its magic. Since I disabled it my iMac has not been frozen once (fingers crossed …). I have lost the butter smooth scrolling of my mouse wheel but that’s much better than rebooting all day long.&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Oct 2016 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2016/10/04/constant-freezes-sierra.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/10/04/constant-freezes-sierra.html</guid>
        
        <category>macOS</category>
        
        
      </item>
    
      <item>
        <title>App Action Extension icon in XCode 8</title>
        <description>&lt;p&gt;Aaaarrgghhhh !!!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
That’s generaly what I say when XCode decides to mess with me. Today I was writing an new action extension for my &lt;a href=&quot;http://librairie.cubesoft.fr&quot;&gt;Librairie app&lt;/a&gt; (note that it’s the first one I write with XCode 8).&lt;/p&gt;

&lt;p&gt;Everything goes fine until I decide to give an icon to this sad little white square used to launch my extension. Normaly I’d go to your target settings “General” tab and choose the asset catalog containing your icon.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2016-09-29-app-extention-icon-xcode-8/general-tab.png&quot; alt=&quot;General tab&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But no, no dice …&lt;/p&gt;

&lt;p&gt;Some smart product manager at Apple decided that it would be fun to see how long it would take me to do my job if they just removed the UI that they previously designed just for this purpose. The answer to this question is precisely … quite some time.&lt;/p&gt;

&lt;p&gt;Turns out, you have to go to the build settings of your target and find the “Asset Catalog App Icon Set Name”. There, you enter the name you have given to your app icon folder (the folder with all the different icon sizes &lt;em&gt;inside&lt;/em&gt; your asset catalog).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2016-09-29-app-extention-icon-xcode-8/build-settings.png&quot; alt=&quot;Build settings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Good job Apple …&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Sep 2016 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2016/09/29/app-extention-icon-xcode-8.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/09/29/app-extention-icon-xcode-8.html</guid>
        
        <category>coding</category>
        
        <category>xcode</category>
        
        
      </item>
    
      <item>
        <title>Commit version 1.0.1</title>
        <description>&lt;p&gt;A quick update to fix a few crashes that were revealed since launch.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
Grab it while it’s hot !&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/commit-db-modern-mysql-client/id1128425956?ls=1&amp;amp;mt=8&quot;&gt;Commit DB on the iOS App Store&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Sep 2016 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2016/09/27/commit-version-101.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/09/27/commit-version-101.html</guid>
        
        <category>projects</category>
        
        <category>coding</category>
        
        
      </item>
    
      <item>
        <title>Introducting Commit DB</title>
        <description>&lt;p&gt;Commit DB is my new project, freshly released in the App Store.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;It is a &lt;a href=&quot;http://commit.cubesoft.fr&quot;&gt;modern MySQL client for iOS&lt;/a&gt;. Its goal is to let developpers and DBAs develop code, query and manage their databases from their iOS devices.&lt;/p&gt;

&lt;p&gt;The app is optimized for the iPad pro with support for multitasking and keyboard shortcuts while still being useful on the iPhone for quick queries.&lt;/p&gt;

&lt;p&gt;A detailed description of the feature set is available at the above link while the app can be downloaded on the App Store:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/commit-db-modern-mysql-client/id1128425956?ls=1&amp;amp;mt=8&quot;&gt;Commit DB - A modern MySQL client&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Sep 2016 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/2016/09/23/introducing-commit.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/09/23/introducing-commit.html</guid>
        
        <category>projects</category>
        
        <category>coding</category>
        
        
      </item>
    
  </channel>
</rss>
